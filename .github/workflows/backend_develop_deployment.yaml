# This is a basic workflow to help you get started with Actions

name: Develop ðŸš€
  
on:
  workflow_call:
    secrets:
      SERVICE_ECR_REPO_NAME:
        description: Service ECR repo name
        required: true
      SERVICE_NAME:
        description: Service name
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-push-image:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
      actions: read

    steps:

      - name: New build Started
        uses: 8398a7/action-slack@v3
        with:
          text: 'New Backend Service Build Started ðŸš€'
          status: 'cancelled'
          author_name: 'Service Builds'
          icon_url: 'https://avatars.githubusercontent.com/u/71592178?s=48&v=4'
          fields: repo,ref,message,author,eventName,workflow
          icon_emoji: ':rocket:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BACKEND_SRV_BLD_ALRT_DEV }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.AWS_DEV_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_TO_PUSH_IMG }}'
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.SERVICE_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  update-helm-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    needs: build-push-image
    if: success()
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.IMG_TAG_APP_ID }}
          private_key: ${{ secrets.IMG_TAG_APP_PRIVATE_KEY }}
          installation_id: ${{ secrets.IMG_TAG_INST_ID }}
          repository: ${{ secrets.K8S_DEFINITION_REPO }}

      - name: Checkout Target Repository (k8s_definitions)
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.K8S_DEFINITION_REPO }}
          token: ${{ steps.generate_token.outputs.token }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Update Image Tag in the develop HelmChart values
        uses: fjogeleit/yaml-update-action@master
        with:
          repository: ${{ secrets.K8S_DEFINITION_REPO }}
          branch: master
          valueFile: '${{ secrets.SERVICE_NAME }}/develop-values.yaml'
          propertyPath: 'imageSource'
          value: '${{ secrets.AWS_DEV_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/${{ secrets.SERVICE_ECR_REPO_NAME }}:${{ github.sha }}'
          createPR: false
          message: '${{ github.actor }} Updated ${{ secrets.SERVICE_NAME }} Image Repository'
          token: ${{ steps.generate_token.outputs.token }}

  send-workflow-success:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    needs: [build-push-image, update-helm-tag]
    if: success()
    steps:
      - name: Send notification when a build is done
        uses: 8398a7/action-slack@v3
        with:
          author_name: 'Service Builds'
          icon_url: 'https://avatars.githubusercontent.com/u/71592178?s=48&v=4'
          status: 'success'
          text: 'Backend Service Build Succeeded âœ…'
          fields: repo,message,commit,author,eventName,ref,workflow,job
          icon_emoji: 'âœ…'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BACKEND_SRV_BLD_ALRT_DEV }}


  send-workflow-failure:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    needs: [build-push-image, update-helm-tag]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:

      - name: Send notification when a build is done
        uses: 8398a7/action-slack@v3
        with:
          author_name: 'Service Builds'
          icon_url: 'https://avatars.githubusercontent.com/u/71592178?s=48&v=4'
          mention: 'here'
          status: 'failure'
          text: 'Backend Service Build Failed ðŸ”´'
          fields: repo,message,commit,author,eventName,ref,workflow,job
          icon_emoji: 'ðŸ”´'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BACKEND_SRV_BLD_ALRT_DEV }}
